@page "/order"
@using Blazored.Toast.Services
@using Client.Contracts
@using Client.Static
@using Share.Models

@inject IAuthenticationRepository _repo
@inject NavigationManager _navManager
@inject IToastService _toastService


<AuthorizeView>
    <Authorized>
        <div class="centered">
            <button class="btn btn-danger py-3 px-5" @onclick="@(() => CreateOrderLink())">Nova porudžbina</button>
        </div>
        <hr />
        <h3>Stolovi</h3>
        <div class="container py-3">
            <div class="row g-4">
                @for (int i = 1; i <= ModelCompany.TablesNo; i++)
                {
                    <div class="col-6 col-md-2">
                        <a class="number-box d-block py-3" href="@($"/EditOrder/Sto {i}")">@i</a>
                    </div>
                }
            </div>
        </div>        
        <br />
        <hr />
        <h3>Ležaljke</h3>
        <div class="container py-3">
            <div class="row g-4">
                @for (int i = 1; i <= ModelCompany.SunLoungersNo; i++)
                {
                    <div class="col-6 col-md-2">
                        <a class="number-box d-block py-3" href="@($"/EditOrder/Lezaljka {i}")">@i</a>
                    </div>
                }
            </div>
        </div>
    </Authorized>
    <NotAuthorized>
        <p>Nemate pristup ovoj stranici.</p>
    </NotAuthorized>
</AuthorizeView>


@code {
    private CompanyModel ModelCompany = new CompanyModel();
    private bool isSuccess = true;
    private string? message;
    private string userName = string.Empty;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            userName = user.Identity.Name;
            ModelCompany = await _repo.GetCompanyPerEmail(user.Identity.Name);
        }
        else
        {
            _navManager.NavigateTo("/login");
        }
    }
    private void CreateOrderLink()
    {
        _navManager.NavigateTo($"/CreateOrder");
    }
}
