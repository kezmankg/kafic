@page "/NewUser"
@using Blazored.Toast.Services
@using Client.Contracts
@using Client.Static
@using Share.Models

@inject IAuthenticationRepository _repo
@inject NavigationManager _navManager
@inject IToastService _toastService

<div class="shadowed-form kafic-reg-form mx-auto">
    <AuthorizeView Roles="Administrator">
        <Authorized>
            <div class="centered">
                <h3>Dodavanje konobara</h3>
                <hr class="blue-hr" />
                <div class="error-message">
                    @if (!string.IsNullOrWhiteSpace(errorMessage))
                    {
                        @errorMessage
                    }
                </div>
            </div>
            <br />
            <EditForm Model="Model" OnValidSubmit="HandleRegistration" Context="EditForm">
                <DataAnnotationsValidator />
                @* <ValidationSummary /> *@
                <div class="form-group mb-2">
                    <label for="firstname">Email</label>
                    <InputText @bind-Value="Model.Email" class="form-control" id="emailaddress" />
                    <ValidationMessage For="@(() => Model.Email)" class="error-message" />
                </div>
                <div class="form-group mb-2">
                    <label for="lastname">Lozinka</label>
                    <InputText @bind-Value="Model.Password" type="password" class="form-control" id="password" />
                    <ValidationMessage For="@(() => Model.Password)" class="error-message" />
                </div>
                <div class="form-group mb-2">
                    <label for="lastname">Ime i prezime</label>
                    <InputText @bind-Value="Model.FullName" class="form-control" id="fullname" />
                    <ValidationMessage For="@(() => Model.FullName)" class="error-message" />
                </div>
                <div class="form-group mb-4">
                    <label for="lastname">Telefon</label>
                    <InputText @bind-Value="Model.PhoneNumber" class="form-control" id="PhoneNumber" />
                    <ValidationMessage For="@(() => Model.PhoneNumber)" class="error-message" />
                </div>
                <div class="centered">
                    <button class="btn btn-primary" type="submit">Dodaj</button>
                </div>
            </EditForm>
        </Authorized>
        <NotAuthorized>
            <p>Nemate pristup ovoj stranici.</p>
        </NotAuthorized>
    </AuthorizeView>

</div>

@code {
    private RegistrationUserModel Model = new RegistrationUserModel();
    private string userEmail = string.Empty;
    private string? errorMessage;
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            userEmail = user.Identity.Name;
        }
    }

    private async Task HandleRegistration()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;
        var userName = user.Identity.Name;
        Model.AdminEmail = userName;

        var error = await _repo.RegisterUser(Model);
        if (error == null)
        {
            _navManager.NavigateTo("/users");
        }
        else
        {
            errorMessage = error;
        }
    }
}
