@page "/Register"
@using Blazored.Toast.Services
@using Client.Contracts
@using Client.Static
@using Share.Models

@inject IAuthenticationRepository _repo
@inject NavigationManager _navManager
@inject IToastService _toastService

<div class="shadowed-form kafic-reg-form mx-auto">
    <div class="centered">
        <h3 class=".blue-hr">Kreiranje admina</h3>
        <hr />
        <div class="error-message">
            @if (!string.IsNullOrWhiteSpace(errorMessage))
            {
                @errorMessage
            }
        </div>
        <br>
    </div> 

    <EditForm Model="Model" OnValidSubmit="HandleRegistration">
        <DataAnnotationsValidator />
        @* <ValidationSummary /> *@
        <div class="form-group mar-bot">
            <label for="firstname">Email</label>
            <InputText @bind-Value="Model.EmailAddress" class="form-control" id="emailaddress" />
            <ValidationMessage For="@(() => Model.EmailAddress)" class="error-message"/>
        </div>
        <div class="form-group mar-bot">
            <label for="lastname">Lozinka</label>
            <InputText @bind-Value="Model.Password" type="password" class="form-control" id="password" />
            <ValidationMessage For="@(() => Model.Password)" class="error-message"/>
        </div>
        <div class="form-group mar-bot">
            <label for="lastname">Ime i prezime</label>
            <InputText @bind-Value="Model.FullName" class="form-control" id="fullname" />
            <ValidationMessage For="@(() => Model.FullName)"  class="error-message"/>
        </div>
        <div class="form-group mar-bot">
            <label for="lastname">Telefon</label>
            <InputText @bind-Value="Model.PhoneNumber" class="form-control" id="PhoneNumber" />
            <ValidationMessage For="@(() => Model.PhoneNumber)" class="error-message" />
        </div>
        <div class="form-group mar-bot">
            <label for="lastname">Ime kafića</label>
            <InputText @bind-Value="Model.CaffeName" class="form-control" id="CaffeName" />
            <ValidationMessage For="@(() => Model.CaffeName)" class="error-message" />
        </div>

        <div class="form-group row mar-bot">
            <div class="col-6">
                <label for="CaffeSeats">Broj stolova</label>
                <InputNumber @bind-Value="Model.TablesNo" class="form-control number-input" id="TablesNo" />
                <ValidationMessage For="@(() => Model.TablesNo)" class="error-message" />
            </div>
            <div class="col-6">
                <label for="CaffeSeats">Broj ležaljki</label>
                <InputNumber @bind-Value="Model.SunLoungersNo" class="form-control number-input" id="SunLoungersNo" />
                <ValidationMessage For="@(() => Model.SunLoungersNo)" class="error-message" />
            </div>    
        </div>
        <br />
        <div class="centered">
            <button class="btn btn-primary" type="submit">Kreiraj admina</button>
        </div>
    </EditForm>
</div>

@code{
    private RegistrationModel Model = new RegistrationModel();
    //private bool isSuccess = true;
    private string? errorMessage;

    private async Task HandleRegistration()
    {
        var error = await _repo.Register(Model);

        if (error == null)
        {
            // Uspešno registrovan
            _navManager.NavigateTo("/login");
        }
        else
        {
            // Prikaz poruke o grešci
            errorMessage = error;
        }
    }
}
