@page "/settings"
@using Blazored.Toast.Services
@using Client.Contracts
@using Client.Static
@using Share.Models

@inject IAuthenticationRepository _repo
@inject NavigationManager _navManager
@inject IToastService _toastService

<div class="shadowed-form login-form mx-auto">
    <AuthorizeView Roles="Administrator">
        <Authorized>
            <div class="centered">
                <h3>Kafić</h3>
                <hr class="blue-hr" />
                <div class="error-message">
                @if (!string.IsNullOrWhiteSpace(message))
                {
                    @message
                }
                </div>
            </div>            
            <br />
            <EditForm Model="Model" OnValidSubmit="HandleSettingsCompany" Context="EditForm">
                <DataAnnotationsValidator />
                <div class="form-group mar-bot">
                    <label for="lastname">Ime kafića</label>
                    <InputText @bind-Value="Model.Name" class="form-control" id="Name" />
                    <ValidationMessage For="@(() => Model.Name)"   class="error-message"/>
                </div>
                <div class="form-group row mar-bot">
                    <div class="col-6">
                        <label for="CaffeSeats">Broj stolova</label>
                        <InputNumber @bind-Value="Model.TablesNo" class="form-control number-input" id="TablesNo" />
                        <ValidationMessage For="@(() => Model.TablesNo)" class="error-message" />
                    </div>
                    <div class="col-6">
                        <label for="CaffeSeats">Broj ležaljki</label>
                        <InputNumber @bind-Value="Model.SunLoungersNo" class="form-control number-input" id="SunLoungersNo" />
                        <ValidationMessage For="@(() => Model.SunLoungersNo)" class="error-message" />
                    </div>    
                </div>
                <br />
                <div class="centered">            
                    <button class="btn btn-primary" type="submit">Izmeni</button>
                </div>
            </EditForm>
        </Authorized>
        <NotAuthorized>
            <p>Nemate pristup ovoj stranici.</p>
        </NotAuthorized>
    </AuthorizeView>
</div>



@code {
    private CompanyModel Model = new CompanyModel();
    private bool isSuccess = true;
    private string? message;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        var authState = await authenticationStateTask;
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            var userName = user.Identity.Name;
            Model = await _repo.GetCompanyPerEmail(user.Identity.Name);
        }
    }
    private async Task HandleSettingsCompany()
    {
        var response = await _repo.UpdateCompany(Model);

        if (response)
        {
            // Uspešno promenjeno
            message = "Usepesno promenjeno";
        }
        else
        {
            // Prikaz poruke o grešci
            message = "error";
        }
    }
}
